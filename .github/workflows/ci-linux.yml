name: Linux Build Test and Deploy

on: [push]

jobs:
  CI:
    strategy:
      matrix:
        python-version: [3.6.x, 3.7.x, 3.8.x]
        python-arch: ["x64"]

    env:
        PYTHONHASHSEED: 32
        TZ: 'Asia/Shanghai'

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: npm install, build, and test
      run: |
        cd ./web/
        npm ci
        npm run build
      env:
        CI: true

    - name: Set up Python ${{matrix.python-version}} ${{matrix.python-arch}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}
        architecture: ${{matrix.python-arch}}
        
    - name: Install dependencies
      run: |
        git lfs install
        git lfs pull
        python -m pip install --upgrade pip wheel setuptools pytest zip-files
        python -m pip install -r requirements.txt
        python -m pip install Sphinx==2.3.1
        python -m pip install autodocsumm sphinx_rtd_theme jieba

    - name: Format log path and name
      id: log_info
      run: |
        echo "::set-output name=log_name::Linux_$(date -d today +%Y%m%d)_${{matrix.python-version}}_${{matrix.python-arch}}_$(echo ${GITHUB_SHA:0:7})"
        echo "::set-output name=log_archive_path::./log_archive/"

    - name: Run Test Case
      run: |
        mkdir -p ${{steps.log_info.outputs.log_archive_path}}
        python -W ignore::DeprecationWarning -m pytest --no-print-logs \
          --log-level=DEBUG \
          --log-file=${{steps.log_info.outputs.log_name}}.log
        zip-files -o ${{steps.log_info.outputs.log_archive_path}}${{steps.log_info.outputs.log_name}}.zip ./${{steps.log_info.outputs.log_name}}.log

    - name: Upload log to artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: ${{steps.log_info.outputs.log_name}}.zip
        path: ${{steps.log_info.outputs.log_archive_path}}

    - name: build Wheel on Linux Platform
      run: |
        pip list
        ## wheel包及源码包制作
        python setup.py sdist
        python setup.py bdist_wheel -p any
        rm -rf build
        python setup.py bdist_wheel -p manylinux1_x86_64
        rm -rf build
        python setup.py bdist_wheel -p win32
        rm -rf build
        python setup.py bdist_wheel -p win_amd64
        rm -rf build
        sphinx-build doc build/doc
    
    - name: Publish to pypi
      if: matrix.python-version == '3.6.x' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}

    - name: Publish to github release
      if: matrix.python-version == '3.6.x' && startsWith(github.event.ref, 'refs/tags')
      uses: fnkr/github-action-ghr@v1
      env:
        GHR_PATH: dist/
        GITHUB_TOKEN: ${{ secrets.GITHUB_USER_TOKEN }}

    - name: Setup AWS S3 dist path
      if: matrix.python-version == '3.6.x' && startsWith(github.event.ref, 'refs/tags') != true
      run: |
        echo "::set-env name=DEST_DIR::dist/tqsdk-python/\
        $(echo ${GITHUB_REF#refs/heads/})/$(date -d today +%Y%m%d)_$(echo ${GITHUB_SHA:0:7})/"

    - name: Setup AWS S3 dist path on tag
      if: matrix.python-version == '3.6.x' && startsWith(github.event.ref, 'refs/tags')
      run: |
        echo "::set-env name=DEST_DIR::dist/tqsdk-python/$(echo ${GITHUB_REF#refs/tags/})/"

    - name: Publish dist to AWS S3
      if: matrix.python-version == '3.6.x'
      uses: jakejarvis/s3-sync-action@master
      env:
        AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "dist"

    - name: Setup branch AWS S3 docs path
      if: matrix.python-version == '3.6.x' && startsWith(github.event.ref, 'refs/tags') != true
      run: |
        echo "::set-env name=DEST_DIR::docs/tqsdk-python/$(echo ${GITHUB_REF#refs/heads/})/"

    - name: Setup branch AWS S3 docs path on Tag
      if: matrix.python-version == '3.6.x' && startsWith(github.event.ref, 'refs/tags')
      run: |
        echo "::set-env name=DEST_DIR::docs/tqsdk-python/$(echo ${GITHUB_REF#refs/tags/})/"

    - name: Publish tag build/doc to AWS S3
      if: matrix.python-version == '3.6.x'
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --exclude '.doctrees/*'
      env:
        AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "build/doc"
