name: Test(Win-py3.6-x86)

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    strategy:
      matrix:
        envinfo:
          - { name: 'windows-3.6-x86', os: windows-latest, python-version: 3.6.x, python-arch: x86, TZ: 'CST-8' }

    env:
        PYTHONIOENCODING: "utf-8"
        PYTHONHASHSEED: 32
        TZ: ${{ matrix.envinfo.TZ }}
        TESTLOGPATH: "./log_archive/"
        TESTLOGNAME: ${{ matrix.envinfo.name }}

    runs-on: ${{ matrix.envinfo.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Giant Files List
      shell: bash
      id: giant-files-list
      run: |
        git ls-files | xargs ls -l | sort -nrk5 | awk '{if($5 > ${{ secrets.FILE_LIMIT_SIZE }}) print $9 }' | xargs ls -lrth
        echo "::set-output name=GIANT-FILES-COUNT::$(git ls-files | xargs ls -l | sort -nrk5 | awk '{if($5 > ${{ secrets.FILE_LIMIT_SIZE }}) print $0}' | wc -l)"

    - name: Giant Files Check
      if: steps.giant-files-list.outputs.GIANT-FILES-COUNT != 0
      run: |
        echo "files size check failed"
        exit 1

    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Package web
      run: |
        cd ./web/
        yarn install --frozen-lockfile
        yarn run build
      env:
        CI: true

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.envinfo.python-version}}
        architecture: ${{matrix.envinfo.python-arch}}
        
    - name: Install dependencies
      run: |
        git lfs install
        git lfs pull
        python -m pip install --upgrade pip wheel setuptools pytest pytest-rerunfailures memory_profiler
        python -m pip install -r requirements.txt

    - name: Run test case
      timeout-minutes: 60
      shell: bash
      run: |
        mkdir -p ${{ env.TESTLOGPATH }}
        python -W ignore::DeprecationWarning -m pytest --show-capture=no \
          --log-level=ERROR \
          --log-file=${{ env.TESTLOGPATH }}${{ env.TESTLOGNAME }}.log

    - name: Upload log to artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.TESTLOGNAME }}
        path: ${{ env.TESTLOGPATH }}